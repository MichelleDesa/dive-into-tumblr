/* MIXINS */

// The value should be the same as the font-size value for the html element
$baseline-px: 10px !default;

@mixin rem($px-values: 16px, $property: font-size) {
  // Convert the baseline into rems
  $baseline-rem: $baseline-px / 1rem;
  #{$property}: $px-values; //pixel fallback
  #{$property}: $px-values / $baseline-rem;
}


@mixin bg-img($clr, $src, $repeat: no-repeat, $x: 0, $y: 0) {
    background: $clr image-url($src) $repeat $x $y;
}


@mixin icon($width, $height: $width, $display: inline-block) {
    .icon_#{$width}x#{$height} {
        @if $display == "inline-block" {
            display: inline-block;
        }
        @else {
            display: $display;
        }
        width: $width + px;
        height: $height + px;
    }
}


@mixin vertical-list($h-margin: 0, $v-margin: 0, $padding: 0)
{
    padding: 0;
    > li {
        @include no-bullet;
        padding: $padding;
        margin: $h-margin $v-margin;
    }
}


@mixin clearfix {
    zoom: 1;
    &:before, &:after { content: ""; display: table; }
    &:after { clear: both; }
}


@mixin default-box-shadow($color: rgba(0, 0, 0, 0.25), $inset: false) {
    @if $inset {
        @include box-shadow($color 0 0 3px inset);
    }
    @else { @include box-shadow($color 0 0 3px); }
}
